[project]
name = "shared-encoder"
version = "0.1.0"
description = "Implementation of a shared encoder for multimodal representation learning."
readme = "README.md"
authors = [ {name = "Vector AI Engineering", email = "ai_engineering@vectorinstitute.ai"}]
license = "MIT"
requires-python = ">=3.11"
dependencies = [
    "mmlearn>=0.1.0b2",
    "open-clip-torch>=2.30.0",
    "pandas>=2.2.3",
    "torchmultimodal",
    "webdataset>=0.2.111",
    "jinja2>=3.1.6",
]

[tool.uv.sources]
torchmultimodal = { git = "https://github.com/facebookresearch/multimodal.git", rev = "main" }

[dependency-groups]
dev = [
    "pip-audit>=2.8.0",
    "pre-commit>=4.1.0",
    "ruff>=0.9.7",
    "wandb>=0.19.7",
]

[tool.ruff]
include = ["*.py", "pyproject.toml", "*.ipynb"]
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ICN", # flake8-import-conventions
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "W", # pycodestyle
    "N", # pep8-naming
    "ERA", # eradicate
    "PL", # pylint
]
fixable = ["A", "B", "COM", "C4", "RET", "SIM", "ICN", "Q", "RSE", "D", "E", "F", "I", "W", "N", "ERA", "PL"]
ignore = [
    "B905", # `zip()` without an explicit `strict=` parameter
    "E501", # line too long
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "PLR2004", # Replace magic number with named constant
    "PLR0913", # Too many arguments
    "COM812", # Missing trailing comma
]

# Ignore import violations in all `__init__.py` files.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.ruff.lint.pep8-naming]
ignore-names = ["X*", "setUp"]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.typos.default.extend-words]
MUC = "MUC"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
